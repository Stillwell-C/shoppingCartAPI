// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          String        @id @default(uuid())
  SKU         Int           @default(autoincrement())
  name        String
  searchName  String        @unique
  price       Float
  dept        Departments
  description String
  img_id      String
  stock       Int
  stock_level StockLevels
  CartProduct CartProduct[]

  @@index([searchName])
}

model Order {
  id                    String      @id @default(uuid())
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  orderStatus           OrderStatus @default(PENDING)
  orderTotal            Float       @default(0.0)
  sameBillingAddress    Boolean
  shippingFirstName     String
  shippingLastName      String
  shippingCompanyName   String?
  shippingAddress       String
  shippingAddressNumber String?
  shippingCity          String
  shippingCountry       String
  shippingZip           String
  shippingPhone         String
  billingFirstName      String?
  billingLastName       String?
  billingCompanyName    String?
  billingAddress        String?
  billingAddressNumber  String?
  billingCity           String?
  billingCountry        String?
  billingZip            String?
  billingPhone          String?
  creditCardNumber      String
  creditCardExpiry      String
  creditCardCVC         String
  orderItems            OrderItem[]
}

model OrderItem {
  id         String @id @default(uuid())
  Order      Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId    String
  searchName String
  qty        Int
  price      Float  @default(0.0)
}

model Cart {
  id          String        @id @default(uuid())
  CartProduct CartProduct[]
}

model CartProduct {
  id        String  @id @default(uuid())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
}

enum OrderStatus {
  PENDING
  INPROCESS
  SHIPPED
  COMPLETED
}

enum Departments {
  CLOTHING
  ACCESSORIES
  INTERIOR
}

enum StockLevels {
  OUT
  LOW
  STOCKED
}
